rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is authenticated (including anonymous)
    function isUserAuthenticated() {
      return request.auth != null && request.auth.token.firebase.sign_in_provider != null;
    }
    
    // Messages collection
    // TEMPORARY PERMISSIVE RULES - For development only
    // TODO: Enable Anonymous Authentication in Firebase Console and switch to authenticated rules
    match /messages/{messageId} {
      // Allow read for everyone (temporary for development)
      allow read: if true;
      
      // Allow write if data has required fields
      allow create: if request.resource.data.keys().hasAll(['text', 'senderId', 'senderName', 'timestamp'])
        && request.resource.data.text is string
        && request.resource.data.senderId is string;
        
      allow update, delete: if false; // Prevent updates and deletes for messages
    }
    
    // Blocked users collection
    // TEMPORARY PERMISSIVE RULES - For development only
    match /blockedUsers/{blockDoc} {
      // Allow read for everyone (temporary)
      allow read: if true;
      
      // Allow write with validation
      allow create: if request.resource.data.keys().hasAll(['blockerId', 'blockedId', 'timestamp']);
      allow delete: if true; // Allow deletion
      allow update: if false; // Prevent updates
    }
    
    // Default deny rule for all other documents
    match /{document=**} {
      allow read, write: if false;
    }
  }
}

